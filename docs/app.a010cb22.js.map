{"version":3,"sources":["js/keys.js","js/app.js"],"names":["newsKey","nyTimesKey","newsSources","renderRows","data","index","article","document","createElement","innerHTML","img","url","title","author","classList","add","getElementById","appendChild","addEventListener","popUp","remove","renderSources","i","string","cleanName","split","source","retrieveData","apiKey","rawResponse","fetch","ok","Error","message","status","jsonResponse","json","err","console","log","normalizeData","ArticleObj","length","cleanData","articles","forEach","result","push","urlToImage","children","thumbnail","results","byline","multimedia","init","sources","parent","firstChild","removeChild","promises","Promise","all","initSingle","style","display"],"mappings":"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","file":"app.a010cb22.js","sourceRoot":"..","sourcesContent":["export const newsKey = '214b0c558498448797163c59349a0165';\nexport const nyTimesKey = 'pAHxmpq5mr6pevxYnc3IA9NogLs8msA1'","// heavy on comments. might be a bit overkill, but i personally can't do without the comments!! \n// when adding new sources, the only hard code required is inside normalizeData\n// the source will automatically be listed with this split function\n// didn't feel comfortable with all the getelement or getclass by id, but we used it so much for this project, i feel good about it\n// really had to be at least familiar with the html and css file, had to search in css file to be familiar, and then google searched\n\n\n// DON'T FORGET TO LOCALHOST!!!!!!!!!\n// for every new newSource, the only functions that needs hard-editing is normalizeData(data)\n\nimport { newsKey } from './keys.js';\nlet newsSources = [\n  `https://newsapi.org/v2/top-headlines?country=us&apiKey=${process.env.NEWS_KEY}`,\n  'https://www.reddit.com/top.json',\n  `https://api.nytimes.com/svc/topstories/v2/us.json?api-key=${process.env.NYTIMES_KEY}`\n  \n];\n//-------------------------------------------------------------------\nfunction renderRows(data, index) {\n  \n  // Vanilla js way\n  let article = document.createElement('article');\n  article.innerHTML = `\n      <section class=\"featuredImage\">\n        <img id=\"popUpToggle${index}\" src=\"${data.img}\" alt=\"\" />\n      </section>\n      <section class=\"articleContent\">\n          <a href=\"${data.url}\"><h3>${data.title}</h3></a>\n          <h6>Author - ${data.author}</h6>\n      </section>\n      <section class=\"impressions\">\n        526\n      </section>\n      <div class=\"clearfix\"></div>\n  `;\n  article.classList.add('article')\n  document.getElementById('main').appendChild(article);\n\n  // event listener for the icon \n  document.getElementById(`popUpToggle${index}`).addEventListener('click', function onClick() {\n    \n    // create popup content\n    let popUp = document.createElement('div');\n    popUp.innerHTML = `\n    <a href=\"#\" id=\"closePopUp\">X</a>\n      <div class=\"container\">\n        <h1>${data.title}</h1>\n        <p>\n          Article description/content here.\n        </p>\n        <a href=\"${data.url}\" class=\"popUpAction\" target=\"_blank\">Read more from source</a>\n      </div>    \n    `\n    \n    // add this to the popup\n    document.getElementById('popUp').appendChild(popUp);\n    \n    // remove the hidden class to make it show\n    document.getElementById('popUp').classList.remove(\"hidden\", \"loader\");\n\n    // event listener for x button on each pop up\n    document.getElementById(\"closePopUp\").addEventListener('click', function onClick() {\n    \n      // clearing the popup for the next popup to have a clean slate\n      \n      //*** below will not work bc there's nothing to grab in the document\n      // document.getElementById('popUp').removeChild(document.getElementById('popUp').firstChild)\n      \n      // need to clear the innerHTML for the popup content I just added \n      popUp.innerHTML = ''\n\n      // add hidden class to remove the popup\n      document.getElementById('popUp').classList.add(\"hidden\");\n\n    });\n\n  });\n  \n}\n//-------------------------------------------------------------------\nfunction renderSources(data, i) {\n\n  //console.log(typeof data) --> Object?!?!?!?!?\n\n  // why do i have to do this? why is each element inside newsSources consdiered an object, not a string?\n  let string = data + '';\n  let splitter = string.split('/');\n  let cleanName = splitter[2]\n\n  // Vanilla js way\n  let source = document.createElement('li');\n  \n  // do i need <li></li> again here?\n  source.innerHTML = `\n    <li id=source${i}><a href=\"#\">${cleanName}</a></li>\n  `;\n  document.getElementById('sources').appendChild(source);  \n}\n//-------------------------------------------------------------------\nasync function retrieveData(url, apiKey) {\n  try {\n    const rawResponse = await fetch(url);\n\n    if (!rawResponse.ok) {\n      throw new Error(rawResponse.message);\n    }\n\n    if (rawResponse.status === 404) {\n      throw new Error('Not found');\n    }\n\n    const jsonResponse = await rawResponse.json();\n    return jsonResponse;\n  } catch (err) {\n    console.log('err', err);\n  }\n}\n//-------------------------------------------------------------------\nfunction normalizeData(data) {\n  function ArticleObj(title, author, url, img) {\n    this.title = title;\n    this.author = author;\n    this.url = url;\n    this.img = img;\n    //impressions\n    //category\n  }\n  for (let i = 0; i < data.length; i++) {\n    let cleanData = [];\n\n    // newsapi\n    if(i === 0) {\n      data[i].articles.forEach(function(result) {\n        cleanData.push(new ArticleObj(result.title, result.author, result.url, result.urlToImage));\n      });\n      data[i] = cleanData;\n    \n    // reddit\n    } else if(i === 1) {\n      data[i].data.children.forEach(function(result) {\n        cleanData.push(new ArticleObj(result.data.title, result.data.author, result.data.url, result.data.thumbnail));\n      });\n      data[i] = cleanData;\n    \n\n    // NYT\n    } else if(i === 2) {\n      data[i].results.forEach(function(result) {\n        cleanData.push(new ArticleObj(result.title, result.byline, result.url, result.multimedia[1].url));\n      });\n      data[i] = cleanData;\n    }\n\n  }\n  return data;\n}\n//-------------------------------------------------------------------\nasync function init(sources) {\n  // step 0 delete all childnodes of \"main\"\n  let parent = document.getElementById('main')\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild)\n  }\n  \n  \n  // step 1 retrieve data\n  let promises = [];\n  for (let i = 0; i < sources.length; i++) {\n    promises.push(retrieveData(sources[i]));\n  }\n  \n  const newsData = await Promise.all(promises);\n  \n  // step 2 normalize data\n  let cleanData = normalizeData(newsData);\n\n  // step 3 render to dom\n  cleanData.forEach(function(sources, i) {\n    sources.forEach(function(articles, index)  {\n      renderRows(articles, i + \"\" + index);\n    });\n  });\n\n  document.getElementById('sourceName').innerHTML = \"\"\n}\n//-------------------------------------------------------------------\n// not happy about having to duplicate almost every line of init just to accomplish running a single element of cleanData at a time\n// this function will only be called when individual sources are clicked\nasync function initSingle(sources, i) {\n\n  // step 0 delete all childnodes of \"main\"\n  let parent = document.getElementById('main')\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild)\n  }\n  \n  // step 1 retrieve data\n  let promises = [];\n  for (let i = 0; i < sources.length; i++) {\n    promises.push(retrieveData(sources[i]));\n  }\n  \n  const newsData = await Promise.all(promises);\n  \n  // step 2 normalize data\n  let cleanData = normalizeData(newsData);\n\n  // step 3 render to dom\n  cleanData[i].forEach(function(articles) {\n    renderRows(articles);\n  });\n\n  // step 4 change source name in search bar\n  let string = sources[i] + '';\n  let splitter = string.split('/');\n  let cleanName = splitter[2]\n  document.getElementById('sourceName').innerHTML = \": \" + cleanName\n\n}\n//-----------------------------------main--------------------------------\n// on page load\n\n// render source list\nfor (let i = 0; i < newsSources.length; i++) {\n  renderSources(newsSources[i], i)\n}\n\n// render all news source articles\ninit(newsSources);\n\n// add event listeners for each source in the drop down\nfor(let i = 0; i < newsSources.length; i++) {\n  // is this just fancy notation? could i have used a normal function notation?\n  document.getElementById(`source${i}`).addEventListener('click', () => initSingle(newsSources, i));\n}\n\n// add event listener for magnifying glass\ndocument.getElementById('search').addEventListener('click', () => {\n  if (document.getElementById(\"sources\").style.display === \"inherit\") {\n    document.getElementById(\"sources\").style.display = \"\";    \n  } \n  \n  else {\n    document.getElementById(\"sources\").style.display = \"inherit\";\n  }\n});\n\n// add event listener for \"Allan\"\ndocument.getElementById('home').addEventListener('click', () => init(newsSources));\n\n\n// popup toggle for every icon clicked\n// renderrows hasn't finished running by the time i'm getting element by class name \"popUpToggle\"\n\n// console.log(document.getElementsByClassName('popUpToggle'))\n\n// left to do:\n// break down functions\n// make unique click possible for individual page loads\n\n\n"]}